---
title: Empirical Dynamic Modelling
subtitle: Automatic Causal Analysis and Forecasting<br>TSF 2022
author: Dr Patrick Laub
date: 2 December 2022
date-format: long
format:
  revealjs:
    theme: [serif, custom.scss]
    controls: true
    controls-tutorial: true
    logo: unsw-logo.svg
    title-slide-attributes:
      data-background-image: unsw-yellow-shape.png
      data-background-size: contain !important
    slide-number: c/t
    strip-comments: true
    margin: 0.2
    chalkboard:
      boardmarker-width: 5
      grid: false
    include-before: <div class="line right"></div>
    footer: Patrick Laub, Time-Series and Forecasting Symposium, University of Sydney
highlight-style: breeze
execute:
  echo: true
---

## Plan

1. Introduction
2. ðŸª„A magic trickðŸª„ (Taken's theorem)
3. Stata package
4. Automated analysis

## About me

- Software engineer, mathematician (PhD)
- Actuarial science post-doc (Lyon)
- Research software engineer at University of Melbourne
- Actuarial science lecturer (UNSW)

## {.smaller}

<div style="border: 3px dashed #555"><img src="stata-journal-paper-title.png" /></div>

::: columns
::: column
Jinjing Li<br>
University of Canberra

George Sugihara<br>
University of California San Diego
:::
::: column
Michael J. Zyphur<br>
University of Queensland

Patrick J. Laub<br>
University of NSW
:::
:::

<br>

::: callout-note
##  Acknowledgments

Discovery Project DP200100219 and Future Fellowship FT140100629.
:::

## Stata package

<iframe src="https://edm-developers.github.io/edm-stata/" width="100%" height="600" style="border:none;"></iframe>


## A dynamical systems view of causality

Imagine $x_t$, $y_t$, $z_t$ are interesting time series...

_If_ the data is generated according to the nonlinear system:

$$
\begin{aligned}
  x_{t+1}  &= \sigma (y_t - x_t) \\
  y_{t+1}  &= x_t (\rho - z_t) - y_t \\
  z_{t+1}  &= x_t y_t - \beta z_t
\end{aligned}
$$

then we can say $y \Rightarrow x$, both $x, z \Rightarrow y$, and both $x, y \Rightarrow z$.

Now forget about those equations...

## Linear dynamics

> If a dynamical model is linear, the system can be written as follows:

$$ \mathbf{x}_{t+1} = \mathbf{A} \mathbf{x}_{t} $$

> where $\mathbf{A}$ is a matrix of coefficients which does not depend on $\mathbf{x}$.
> Note that the trajectories $x_i(t)$ will not typically be linear with respect to time.

::: footer
Source: Munch et al. (2020), Frequently asked questions about nonlinear dynamics and
empirical dynamic modelling, ICES Journal of Marine Science.
:::

## Nonlinear dynamics

> Using a term like nonlinear science is like referring to the bulk of zoology as the study of non-elephant animals.

::: footer
Source: StanisÅ‚aw Ulam
:::

## Taken's Theorem

> Takens' theorem is a deep mathematical result with far-reaching implications.
> Unfortunately, to really understand it, it requires a background in topology.

<br>

<iframe src="https://en.wikipedia.org/wiki/Takens%27s_theorem#Simplified,_slightly_inaccurate_version" width="100%" height="300" style="border:none;"></iframe>

::: footer
Source: Munch et al. (2020), Frequently asked questions about nonlinear dynamics and
empirical dynamic modelling, ICES Journal of Marine Science.
:::


## Key idea

If $x$ causes $y$, then information about $x$ is somehow embedded in $y$.

By observing $y$, we should be able to (roughly) forecast $x$.

By observing more of $y$ (more "training data"), do our forecasts of $x$ become more accurate?


## Fish brains

Keichi work

## Stata package

<iframe src="https://edm-developers.github.io/edm-stata/" width="100%" height="600" style="border:none;"></iframe>

## R package

<iframe src="https://edm-developers.github.io/fastEDM-r/" width="100%" height="600" style="border:none;"></iframe>

## Python package

<iframe src="https://www.github.com/EDM-Developers/fastEDM-python/" width="100%" height="600" style="border:none;"></iframe>

## Sydney house price forecasting

```{python}
import fastEDM
dir(fastEDM)
```

## Package features

- Fast, optimised multithreaded C++ code
- Easy to use automated analysis
- Handles panel data
- Handles irregularly sampled time series / missing data
- Highly "vectorised" (7 for loops deep)
- GPU acceleration

- Well-engineered (3 OS, CI, count # LOC tessts)